[user]
        name = Cenk Alti
        email = cenkalti@gmail.com
        signingKey = 45173BCEAB1B618F917DFFC12DB2EA6FD1BF1761

[commit]
        gpgsign = true

[alias]
        # List aliases
        ls = "!git config --get-regexp alias\\. | sed 's/^......//' | sed 's/ /	/'"

        st  = status --short --branch
        stu = status -uno

        ci = commit -m
        ce = "!f() { git commit --allow-empty --allow-empty-message -m \"$1\"; }; f"

        # Edit last commit message
        edit = commit --amend

        # Amend the changes into previos commit
        amend = commit --amend --date="now" -C HEAD

        # Dangerous commands
        #
        pr  = pull --rebase
        prp = "!git pull --rebase && git push"
        pp  = "!git pull --no-edit && git push"
        ss  = "!git stash && git pull --rebase --no-edit && git push && git stash pop"

        co = checkout
        cp = cherry-pick
        br = branch
        wc = whatchanged
        up = branch --set-upstream-to # ... origin/<master> <branch>
        tr = branch -vv

        df  = diff
        dfc = diff --cached
        dft = difftool

        today = log --since="6am"
        contributors = shortlog -s -n

        # Show the fetched commits
        lc   = log ORIG_HEAD.. --stat --no-merges

        # Nice history views
        lol  = log --graph --decorate --oneline --abbrev-commit
        lola = log --graph --decorate --oneline --abbrev-commit --all
        dag  = log --graph --format='format:%C(yellow)%h%C(reset) %C(blue)\"%an\" <%ae>%C(reset) %C(magenta)%cr%C(reset)%C(auto)%d%C(reset)%n%s' --date-order

        # Show commits between two refs. Pass argument like master...feature
        lr   = log --graph --oneline --left-right --cherry-pick

        # Show commits between master and the current branch
        lrm  = "!git log --graph --oneline --left-right --cherry-pick master...`git rev-parse HEAD`"

        # Show commits in last week
        lw = "!git log --since='8 days ago' --author=cenkalti --pretty='format:%cd %Cblue%h%Creset %s' --date='format:%a %d %b' --reverse --color=always"

        xxx  = reset --hard
        prev = reset HEAD^

        assume   = update-index --assume-unchanged
        unassume = update-index --no-assume-unchanged
        assumed  = "!git ls-files -v | grep ^h | cut -c 3-"

        # Delete local branches that are merged into master
        dm = "!git branch --merged | grep -v '*' | grep -v 'master$' | xargs -n 1 git branch -d"

        # Delete local brach
        dl = branch -D
        # Delete remote branch
        dr = push origin --delete

        # Delete tag from local and remote
        dt = "!git tag -d $1 && git push --delete origin"

        # Add only untracked files
        au = "!git ls-files -o --exclude-standard -z | xargs -0 git add"

[color]
        ui = true
        pager = true

[color "branch"]
        current = yellow reverse
        local = yellow
        remote = green

[color "diff"]
        meta = yellow
        frag = magenta bold
        old = red bold
        new = green bold
        whitespace = red reverse
        commit = yellow bold

[color "status"]
        added = green
        changed = yellow
        untracked = cyan

[core]
        editor = vim
        autocrlf = false
        pager = "diff-so-fancy | less --tabs=4 -R"

[pager]
        difftool = true

[clean]
        requireForce = false

[merge]
        summary = true
        conflictstyle = diff3

[push]
        default = current
        followTags = true

[diff]
        algorithm = patience
        compactionHeuristic = true
        tool = difftastic

[difftool]
        prompt = false

[difftool "difftastic"]
        cmd = difft "$LOCAL" "$REMOTE"

[credential]
        helper = osxkeychain

[github]
        user = cenk

[ghi]
        token = !security find-internet-password -a cenk -s github.com -l 'ghi token' -w
[color "diff-highlight"]
        oldNormal = red bold
        oldHighlight = red bold 52
        newNormal = green bold
        newHighlight = green bold 22
[fetch]
        prune = true
[filter "lfs"]
        clean = git-lfs clean -- %f
        smudge = git-lfs smudge -- %f
        process = git-lfs filter-process
        required = true
[pull]
        ff = only
